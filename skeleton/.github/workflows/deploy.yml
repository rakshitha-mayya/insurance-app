name: Deploy EC2 Instance

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
        - plan
        - apply
        - destroy

env:
  TF_VERSION: 1.5.0

jobs:
  # gitleaks:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4
  #     with:
  #       repository: 'kjchandan/Backstage-web-Java-code'

  #   - uses: gitleaks/gitleaks-action@v2
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
  #     continue-on-error: true

  # Code-linting:
  #   needs: gitleaks
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4
  #     with:
  #       repository: 'kjchandan/Backstage-web-Java-code'

  #   - uses: actions/setup-java@v4
  #     with:
  #       distribution: 'temurin' # See 'Supported distributions' for available options
  #       java-version: '11'

  #   - name: Set up Maven
  #     uses: stCarolas/setup-maven@v5
  #     with:
  #       maven-version: 3.8.2

  #   - name: code linting
  #     run: |
  #       mvn validate || true
  #       mvn checkstyle:check || true
  #       mvn pmd:check || true

  terraform:
    needs: Code-linting
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: "AKIA47CRZJOZF5LUADMY"
        aws-secret-access-key: "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"
        aws-region: 'ap-south-1'
       
    # - name: Terraform fmt
    #   id: fmt
    #   run: terraform fmt -check
    #   continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    # - name: Terraform Plan
    #   id: plan
    #   if: github.event_name == 'push' || github.event.inputs.action == 'plan' || github.event_name == 'pull_request'
    #   run: terraform plan -no-color -input=false
    #   continue-on-error: true

    # - name: Terraform Plan Status
    #   if: steps.plan.outcome == 'failure'
    #   run: exit 1

    - name: Terraform Apply
      if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event.inputs.action == 'apply'
      run: terraform apply -auto-approve -input=false

    # - name: Terraform Destroy
    #   if: github.event.inputs.action == 'destroy'
    #   run: terraform destroy -auto-approve -input=false
